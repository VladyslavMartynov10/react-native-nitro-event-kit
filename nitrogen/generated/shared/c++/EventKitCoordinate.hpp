///
/// EventKitCoordinate.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/JSIConverter.hpp>)
#include <NitroModules/JSIConverter.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif
#if __has_include(<NitroModules/NitroDefines.hpp>)
#include <NitroModules/NitroDefines.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif





namespace margelo::nitro::eventkit {

  /**
   * A struct which can be represented as a JavaScript object (EventKitCoordinate).
   */
  struct EventKitCoordinate {
  public:
    double latitude     SWIFT_PRIVATE;
    double longitude     SWIFT_PRIVATE;

  public:
    EventKitCoordinate() = default;
    explicit EventKitCoordinate(double latitude, double longitude): latitude(latitude), longitude(longitude) {}
  };

} // namespace margelo::nitro::eventkit

namespace margelo::nitro {

  using namespace margelo::nitro::eventkit;

  // C++ EventKitCoordinate <> JS EventKitCoordinate (object)
  template <>
  struct JSIConverter<EventKitCoordinate> final {
    static inline EventKitCoordinate fromJSI(jsi::Runtime& runtime, const jsi::Value& arg) {
      jsi::Object obj = arg.asObject(runtime);
      return EventKitCoordinate(
        JSIConverter<double>::fromJSI(runtime, obj.getProperty(runtime, "latitude")),
        JSIConverter<double>::fromJSI(runtime, obj.getProperty(runtime, "longitude"))
      );
    }
    static inline jsi::Value toJSI(jsi::Runtime& runtime, const EventKitCoordinate& arg) {
      jsi::Object obj(runtime);
      obj.setProperty(runtime, "latitude", JSIConverter<double>::toJSI(runtime, arg.latitude));
      obj.setProperty(runtime, "longitude", JSIConverter<double>::toJSI(runtime, arg.longitude));
      return obj;
    }
    static inline bool canConvert(jsi::Runtime& runtime, const jsi::Value& value) {
      if (!value.isObject()) {
        return false;
      }
      jsi::Object obj = value.getObject(runtime);
      if (!JSIConverter<double>::canConvert(runtime, obj.getProperty(runtime, "latitude"))) return false;
      if (!JSIConverter<double>::canConvert(runtime, obj.getProperty(runtime, "longitude"))) return false;
      return true;
    }
  };

} // namespace margelo::nitro
