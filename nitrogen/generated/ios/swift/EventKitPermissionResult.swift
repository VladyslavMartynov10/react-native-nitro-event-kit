///
/// EventKitPermissionResult.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS union `EventKitPermissionResult`, backed by a C++ enum.
 */
public typealias EventKitPermissionResult = margelo.nitro.eventkit.EventKitPermissionResult

public extension EventKitPermissionResult {
  /**
   * Get a EventKitPermissionResult for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "denied":
        self = .denied
      case "notDetermined":
        self = .notdetermined
      case "restricted":
        self = .restricted
      case "fullAccess":
        self = .fullaccess
      case "writeOnly":
        self = .writeonly
      case "unavailable":
        self = .unavailable
      default:
        return nil
    }
  }

  /**
   * Get the String value this EventKitPermissionResult represents.
   */
  var stringValue: String {
    switch self {
      case .denied:
        return "denied"
      case .notdetermined:
        return "notDetermined"
      case .restricted:
        return "restricted"
      case .fullaccess:
        return "fullAccess"
      case .writeonly:
        return "writeOnly"
      case .unavailable:
        return "unavailable"
    }
  }
}
