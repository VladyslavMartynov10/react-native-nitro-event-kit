///
/// EventKitAvailability.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS enum `EventKitAvailability`, backed by a C++ enum.
 */
public typealias EventKitAvailability = margelo.nitro.eventkit.EventKitAvailability

public extension EventKitAvailability {
  /**
   * Get a EventKitAvailability for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "NotSupported":
        self = .notsupported
      case "Busy":
        self = .busy
      case "Free":
        self = .free
      case "Tentative":
        self = .tentative
      case "Unavailable":
        self = .unavailable
      default:
        return nil
    }
  }

  /**
   * Get the String value this EventKitAvailability represents.
   */
  var stringValue: String {
    switch self {
      case .notsupported:
        return "NotSupported"
      case .busy:
        return "Busy"
      case .free:
        return "Free"
      case .tentative:
        return "Tentative"
      case .unavailable:
        return "Unavailable"
    }
  }
}
