///
/// HybridCalendarPermissionSpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridCalendarPermissionSpec.hpp"

// Forward declaration of `HybridCalendarPermissionSpec_cxx` to properly resolve imports.
namespace NitroEventKit { class HybridCalendarPermissionSpec_cxx; }

// Forward declaration of `EventKitPermissionResult` to properly resolve imports.
namespace margelo::nitro::eventkit { enum class EventKitPermissionResult; }

#include "EventKitPermissionResult.hpp"
#include <NitroModules/Promise.hpp>

#include "NitroEventKit-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::eventkit {

  /**
   * The C++ part of HybridCalendarPermissionSpec_cxx.swift.
   *
   * HybridCalendarPermissionSpecSwift (C++) accesses HybridCalendarPermissionSpec_cxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridCalendarPermissionSpec_cxx can directly inherit from the C++ class HybridCalendarPermissionSpec
   * to simplify the whole structure and memory management.
   */
  class HybridCalendarPermissionSpecSwift: public virtual HybridCalendarPermissionSpec {
  public:
    // Constructor from a Swift instance
    explicit HybridCalendarPermissionSpecSwift(const NitroEventKit::HybridCalendarPermissionSpec_cxx& swiftPart):
      HybridObject(HybridCalendarPermissionSpec::TAG),
      _swiftPart(swiftPart) { }

  public:
    // Get the Swift part
    inline NitroEventKit::HybridCalendarPermissionSpec_cxx& getSwiftPart() noexcept {
      return _swiftPart;
    }

  public:
    // Get memory pressure
    inline size_t getExternalMemorySize() noexcept override {
      return _swiftPart.getMemorySize();
    }

  public:
    // Properties
    

  public:
    // Methods
    inline EventKitPermissionResult getPermissionsStatus() override {
      auto __result = _swiftPart.getPermissionsStatus();
      if (__result.hasError()) [[unlikely]] {
        std::rethrow_exception(__result.error());
      }
      auto __value = std::move(__result.value());
      return __value;
    }
    inline std::shared_ptr<Promise<EventKitPermissionResult>> requestPermission() override {
      auto __result = _swiftPart.requestPermission();
      if (__result.hasError()) [[unlikely]] {
        std::rethrow_exception(__result.error());
      }
      auto __value = std::move(__result.value());
      return __value;
    }

  private:
    NitroEventKit::HybridCalendarPermissionSpec_cxx _swiftPart;
  };

} // namespace margelo::nitro::eventkit
